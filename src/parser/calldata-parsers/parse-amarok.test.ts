import { AbiCoder } from 'ethers'

import { CacheType, initCache } from '../../abi-cache/cache'

import { AMAROK_PAYLOAD_ABI } from './abis/amarok'

describe('Amarok tests', () => {
  beforeAll(() => {
    initCache(CacheType.MEMORY)
  })

  it('should parse amarok payload', () => {
    const rawCallData =
      '0x0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000044d51423298160e91492da091acd9acd6697bab0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e00000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e0000000000000000000000001af3f329e8be154074d8769d1ffa4ee058b1dbc300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f176bfca6293ced00000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000010418cbafe50000000000000000000000000000000000000000000000000f176bfca6293ced000000000000000000000000000000000000000000000000000fb29df7ac71a000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000be27f03c8e6a61e2a4b1ee7940dbcb9204744d1c0000000000000000000000000000000000000000000000000000000064c92b7700000000000000000000000000000000000000000000000000000000000000020000000000000000000000001af3f329e8be154074d8769d1ffa4ee058b1dbc3000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c00000000000000000000000000000000000000000000000000000000'
    const parsed = AbiCoder.defaultAbiCoder().decode(
      AMAROK_PAYLOAD_ABI,
      rawCallData
    )

    expect(parsed[0][0]).toStrictEqual([
      '0x10ED43C718714eb63d5aA57B78B54704E256024E',
      '0x10ED43C718714eb63d5aA57B78B54704E256024E',
      '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',
      '0x0000000000000000000000000000000000000000',
      1087456567896915181n,
      '0x18cbafe50000000000000000000000000000000000000000000000000f176bfca6293ced000000000000000000000000000000000000000000000000000fb29df7ac71a000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000be27f03c8e6a61e2a4b1ee7940dbcb9204744d1c0000000000000000000000000000000000000000000000000000000064c92b7700000000000000000000000000000000000000000000000000000000000000020000000000000000000000001af3f329e8be154074d8769d1ffa4ee058b1dbc3000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',
      true,
    ])

    expect(parsed[1]).toBe('0x044D51423298160e91492Da091ACd9acd6697Bab')
  })
})
